# Default values for generic-deployment.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image: 
  repository: registry.opsta.in.th/bookinfo/ratings
  tag: v1.0.1
  pullPolicy: IfNotPresent
imagePullSecrets:
  - registry-bookinfo

nameOverride: deployment-bookinfo
fullnameOverride: deployment-bookinfo
#versionLabel: 0.2.1

env: 
  - name: SERVICE_VERSION
    value: v2
  - name: MONGO_DB_URL
    value: mongodb://mongodb:27017/ratings-dev
  - name: MONGO_DB_USERNAME
    value: ratings-dev
  - name: MONGO_DB_PASSWORD
    value: ratings-dev
  # - name: SAMPLE_SHARED_CONFIG
  #   configmap:
  #     name: shared-configmap
  #     value: SAMPLE_SHARED_CONFIG

envFrom: {}
  # configMaps:
  #   - generic-deployment
  # secrets:
  #   - generic-deployment

configMaps:
  create: false
  data: {}
    # SAMPLE_CONFIG: "sample-config"

secrets:
  create: false
  data: {}
    # SAMPLE_PASSWORD: "sample-secret"

containerPorts:
  - 8080

resources: {}
  # requests:
  #   cpu: 100m
  #   memory: 50Mi
  # limits:
  #   cpu: 2000m
  #   memory: 200Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Waiting time in seconds for shutting down pod after sent SIGTERM
terminationGracePeriodSeconds: 30

services: {}
  # - type: NodePort
  #   annotation: {}
  #   ports:
  #     - name: sample1-service-port
  #       protocol: TCP
  #       port: 80
  #       targetPort: 80
  #       nodePort: 32080
  #     - name: sample2-service-port
  #       protocol: TCP
  #       port: 8080
  #       targetPort: 8080
  #       nodePort: 32081
  # - suffixName: "lb"
  #   type: LoadBalancer
  #   annotation: {}
  #   ports:
  #     - name: sample1-service-port
  #       protocol: TCP
  #       port: 80
  #       targetPort: 80
  #     - name: sample2-service-port
  #       protocol: TCP
  #       port: 8080
  #       targetPort: 8080

serviceHeadless:
  enabled: false
  # annotation: {}
  # ports:
  #   - name: sample1-service-port
  #     protocol: TCP
  #     port: 80
  #     targetPort: 80
  #   - name: sample2-service-port
  #     protocol: TCP
  #     port: 8080
  #     targetPort: 8080

healthCheck:
  enabled: false
  readinessProbe: {}
    # httpGet:
    #   path: /readyz
    #   port: 80
    # initialDelaySeconds: 0
    # timeoutSeconds: 1
    # periodSeconds: 10
    # successThreshold: 1
    # failureThreshold: 3
  livenessProbe: {}
    # httpGet:
    #   path: /healthz
    #   port: 80
    # initialDelaySeconds: 0
    # timeoutSeconds: 1
    # periodSeconds: 10
    # successThreshold: 1
    # failureThreshold: 3

# Pod update strategy
updateStrategy:
  # Blue-Green Deployment
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 100%
    maxUnavailable: 0

# Horizontal Pod Autoscaling
autoscaling:
  enabled: false
  # # Example
  # minReplicas: 1
  # maxReplicas: 10
  # stabilizationWindowSeconds: 300
  # scaleDownPercent: 20
  # scaleDownPeriodSeconds: 60 
  # targetCPUUtilizationPercentage: 50
  # targetMemoryUtilizationPercentage: 50

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  rules: []
    # - host: a.example.com
    #   http:
    #     paths:
    #       - path: /
    #         backend:
    #           - servicePort: 80
    #       - path: /api
    #         backend:
    #           - servicePort: 8080
    # - host: b.example.com
    #   http:
    #     paths:
    #       - path: /
    #         backend:
    #           - servicePort: 80
  tls: {}
  #  - hosts:
  #    - a.example.com
  #    - b.example.com
  #    secretName: wildcard.example.com


istioIngress:
  enabled: false
  serverPort: 80 # or 443
  tls: {}
    # mode: SIMPLE
    # credentialName: https-tls
  hosts: []
    # - a.example.com
  http:
    - match:
      - uri:
        prefix: /
      rewrite:
        uri: /rewrite
      route:
      - destination:
          port:
            number: 8080
